<!DOCTYPE html>
<html lang="en">

<head>
    <title>Server Resources</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="/socket.io/socket.io.js"></script>
</head>

<body class="bg-gray-100">
    <div class="container mx-auto py-8">
        <h1 class="text-2xl font-bold mb-4">Server Resource Management</h1>
        <div class="grid grid-cols-2 gap-4">
            <div>
                <canvas id="cpuChart"></canvas>
            </div>
            <div>
                <canvas id="ramChart"></canvas>
            </div>
        </div>
        <div class="grid grid-cols-2 gap-4 mt-4">
            <div class="col-span-1">
                <canvas id="loadChart"></canvas>
            </div>
            <div class="col-span-1">
                <canvas id="diskChart" width="50" height="50"></canvas>
            </div>
        </div>
        <div class="grid grid-cols-2 gap-4 mt-4">
            <div class="col-span-1">
                <div id="uptime" class="text-lg font-bold"></div>
            </div>
            <div class="col-span-1">
                <h2>Region: <span id="region"></span></h2>
                <canvas id="networkChart" width="400" height="400"></canvas>
            </div>
        </div>
    </div>

    <script>
        const socket = io();

        // Initialize charts
        const cpuChartCtx = document.getElementById('cpuChart').getContext('2d');
        const ramChartCtx = document.getElementById('ramChart').getContext('2d');
        const loadChartCtx = document.getElementById('loadChart').getContext('2d');
        const networkCtx = document.getElementById('networkChart').getContext('2d');

        const cpuChart = new Chart(cpuChartCtx, {
            type: 'line',
            data: {
                labels: [],
                datasets: [{
                    label: 'CPU Usage (%)',
                    data: [],
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 2,
                    fill: false,
                }],
            },
            options: { responsive: true },
        });

        const ramChart = new Chart(ramChartCtx, {
            type: 'line',
            data: {
                labels: [],
                datasets: [{
                    label: 'Free RAM (MB)',
                    data: [],
                    borderColor: 'rgba(153, 102, 255, 1)',
                    borderWidth: 2,
                    fill: false,
                }],
            },
            options: { responsive: true },
        });

        const loadChart = new Chart(loadChartCtx, {
            type: 'bar',
            data: {
                labels: ['1 min', '5 min', '15 min'],
                datasets: [{
                    label: 'Load Average',
                    data: [],
                    backgroundColor: 'rgba(255, 159, 64, 0.2)',
                    borderColor: 'rgba(255, 159, 64, 1)',
                    borderWidth: 1,
                }],
            },
            options: { responsive: true },
        });

        const networkChartData = {
            labels: [], // Tên các interface mạng
            datasets: [{
                label: 'Network Interfaces',
                data: [], // Địa chỉ mạng (chỉ để minh họa)
                backgroundColor: [],
                borderColor: '#fff',
                borderWidth: 1
            }]
        };

        // Tạo biểu đồ Bar
        const networkChart = new Chart(networkCtx, {
            type: 'bar',
            data: networkChartData,
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                }
            }
        });

        socket.on('server-stats', (data) => {
            const timestamp = new Date().toLocaleTimeString();

            // Update CPU Chart
            cpuChart.data.labels.push(timestamp);
            cpuChart.data.datasets[0].data.push(data.cpuUsage);
            if (cpuChart.data.labels.length > 10) cpuChart.data.labels.shift();
            if (cpuChart.data.datasets[0].data.length > 10) cpuChart.data.datasets[0].data.shift();
            cpuChart.update();

            // Update RAM Chart
            ramChart.data.labels.push(timestamp);
            ramChart.data.datasets[0].data.push(data.freeMem);
            if (ramChart.data.labels.length > 10) ramChart.data.labels.shift();
            if (ramChart.data.datasets[0].data.length > 10) ramChart.data.datasets[0].data.shift();
            ramChart.update();

            // Update Load Chart
            loadChart.data.datasets[0].data = data.loadAvg;
            loadChart.update();

            // Update uptime
            document.getElementById('uptime').innerText = `Uptime: ${Math.floor(data.uptime / 60)} minutes`;


            const { region, network } = data;
            console.log('region, network:', region, network)

            document.getElementById('region').textContent = region;

            networkChartData.labels = network.map(net => net.interface);
            networkChartData.datasets[0].data = network.map(net => 1);
            networkChartData.datasets[0].backgroundColor = network.map(() => `#${Math.floor(Math.random() * 16777215).toString(16)}`);

            // Cập nhật biểu đồ
            networkChart.update();
        });


        fetch('/disk-usage')
            .then(response => response.json())
            .then(data => {
                const used = data.used;
                const free = data.free;

                const total = data.total;
                const usedPercentage = (used / total) * 100;
                const freePercentage = (free / total) * 100;

                // Cập nhật biểu đồ
                const chartData = {
                    labels: ['Used Space', 'Free Space'],
                    datasets: [{
                        data: [usedPercentage, freePercentage],
                        backgroundColor: ['#FF5733', '#33FF57'],
                        borderColor: '#ffffff',
                        borderWidth: 1
                    }]
                };

                const ctx = document.getElementById('diskChart').getContext('2d');
                const diskChart = new Chart(ctx, {
                    type: 'pie',
                    data: chartData
                });
            })
            .catch(error => console.error('Error fetching disk usage data:', error));
    </script>
</body>

</html>